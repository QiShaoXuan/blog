(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{186:function(e,t,_){"use strict";_.r(t);var v=_(0),r=Object(v.a)({},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"从用户输入url到浏览器呈现页面经过了哪些过程"}},[e._v("从用户输入URL到浏览器呈现页面经过了哪些过程")]),e._v(" "),_("h3",{attrs:{id:"dns-解析"}},[e._v("DNS 解析")]),e._v(" "),e._m(0),e._v(" "),_("h3",{attrs:{id:"http请求发起和响应"}},[e._v("HTTP请求发起和响应")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),_("h3",{attrs:{id:"网页渲染"}},[e._v("网页渲染")]),e._v(" "),e._m(4),e._v(" "),_("blockquote",[_("p",[_("a",{attrs:{href:"https://juejin.im/post/5bbaa549e51d450e827b6b13",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),_("OutboundLink")],1)])]),e._v(" "),_("comment-comment")],1)},[function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ol",[_("li",[e._v("浏览器根据地址去本身缓存中查找dns解析记录，如果有，则直接返回IP地址，否则浏览器会查找操作系统中（hosts文件）是否有该域名的dns解析记录，如果有则返回。")]),e._v(" "),_("li",[e._v("如果浏览器缓存和操作系统hosts中均无该域名的dns解析记录，或者已经过期，此时就会向域名服务器发起请求来解析这个域名。")]),e._v(" "),_("li",[e._v("请求会先到LDNS（本地域名服务器），让它来尝试解析这个域名，如果LDNS也解析不了，则直接到根域名解析器请求解析")]),e._v(" "),_("li",[e._v("根域名服务器给LDNS返回一个所查询余的主域名服务器（gTLDServer）地址。")]),e._v(" "),_("li",[e._v("此时LDNS再向上一步返回的gTLD服务器发起解析请求。")]),e._v(" "),_("li",[e._v("gTLD服务器接收到解析请求后查找并返回此域名对应的Name Server域名服务器的地址，这个Name Server通常就是你注册的域名服务器（比如阿里dns、腾讯dns等）")]),e._v(" "),_("li",[e._v("Name Server域名服务器会查询存储的域名和IP的映射关系表，正常情况下都根据域名得到目标IP记录，连同一个TTL值返回给DNS Server域名服务器")]),e._v(" "),_("li",[e._v("返回该域名对应的IP和TTL值，Local DNS Server会缓存这个域名和IP的对应关系，缓存的时间有TTL值控制。")]),e._v(" "),_("li",[e._v("把解析的结果返回给用户，用户根据TTL值缓存在本地系统缓存中，域名解析过程结束。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("用户输入URL，浏览器获取到URL")]),this._v(" "),t("li",[this._v("浏览器(应用层)进行DNS解析（如果输入的是IP地址，此步骤省略）")]),this._v(" "),t("li",[this._v("根据解析出的IP地址+端口，浏览器（应用层）发起HTTP请求，请求中携带（请求头header（也可细分为请求行和请求头）、请求体body），")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("header包含：")]),this._v(" "),t("blockquote",[t("p",[this._v("请求的方法（get、post、put..）\n协议（http、https、ftp、sftp…）\n目标url（具体的请求路径已经文件名）\n一些必要信息（缓存、cookie之类）")]),this._v(" "),t("p",[this._v("body包含：")]),this._v(" "),t("p",[this._v("请求的内容")])])])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ol",{attrs:{start:"4"}},[_("li",[e._v("请求到达传输层，tcp协议为传输报文提供可靠的字节流传输服务，它通过三次握手等手段来保证传输过程中的安全可靠。通过对大块数据的分割成一个个报文段的方式提供给大量数据的便携传输。")]),e._v(" "),_("li",[e._v("到网络层， 网络层通过ARP寻址得到接收方的Mac地址，IP协议把在传输层被分割成一个个数据包传送接收方。")]),e._v(" "),_("li",[e._v("数据到达数据链路层，请求阶段完成")]),e._v(" "),_("li",[e._v("接收方在数据链路层收到数据包之后，层层传递到应用层，接收方应用程序就获得到请求报文。")]),e._v(" "),_("li",[e._v("接收方收到发送方的HTTP请求之后，进行请求文件资源（如HTML页面）的寻找并响应报文")]),e._v(" "),_("li",[e._v("发送方收到响应报文后，如果报文中的状态码表示请求成功，则接受返回的资源（如HTML文件），进行页面渲染。")])])},function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ol",[_("li",[e._v("浏览器通过HTMLParser根据深度遍历的原则把HTML解析成DOM Tree。")]),e._v(" "),_("li",[e._v("将CSS解析成CSS Rule Tree（CSSOM Tree）。")]),e._v(" "),_("li",[e._v("根据DOM树和CSSOM树来构造render Tree。")]),e._v(" "),_("li",[e._v("layout：根据得到的render tree来计算所有节点在屏幕的位置。")]),e._v(" "),_("li",[e._v("paint：遍历render树，并调用硬件图形API来绘制每个节点。")]),e._v(" "),_("li",[e._v("当遇到 "),_("code",[e._v("script")]),e._v(" 标签时会等待其中 "),_("code",[e._v("js")]),e._v(" 代码执行完成后继续执行上述步骤(会造成阻塞)")])])}],!1,null,null,null);r.options.__file="url.md";t.default=r.exports}}]);