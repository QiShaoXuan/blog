(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{228:function(t,e,v){"use strict";v.r(e);var o=v(0),r=Object(o.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"事件循环（event-loop）"}},[t._v("事件循环（Event Loop）")]),t._v(" "),v("h2",{attrs:{id:"单线程的原因"}},[t._v("单线程的原因")]),t._v(" "),v("blockquote",[v("p",[t._v("单线程与之用途有关，单线程能够保证一致性，如果有两个线程，一个线程点击了一个元素，另一个删除了一个元素，浏览器以哪一个为准？")])]),t._v(" "),v("p",[t._v("单线程指的是单个脚本只能在一个线程上运行，而不是 JavaScript 引擎只有一个线程。")]),t._v(" "),v("h2",{attrs:{id:"event-loop"}},[t._v("Event Loop")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("Javascript是单线程的，所有的同步任务都会在主线程中执行。")])]),t._v(" "),v("li",[v("p",[t._v("主线程之外，还有一个任务队列。每当一个异步任务有结果了，就往任务队列里塞一个事件。")])]),t._v(" "),v("li",[v("p",[t._v("当主线程中的任务，都执行完之后，系统会 “依次” 读取任务队列里的事件。与之相对应的异步任务进入主线程，开始执行。")])]),t._v(" "),v("li",[v("p",[t._v("异步任务之间，会存在差异，所以它们执行的优先级也会有区别。大致分为 微任务（micro task，如：Promise、MutaionObserver等）和宏任务（macro task，如：setTimeout、setInterval、I/O等）。同一次事件循环中，微任务永远在宏任务之前执行。")])]),t._v(" "),v("li",[v("p",[t._v("主线程会不断重复上面的步骤，直到执行完所有任务。")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);